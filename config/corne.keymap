/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

&led_strip { chain-length = <27>; };

/ {
    behaviors {
        hold: hold {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <900>;
            flavor = "balanced";
            hold-trigger-key-positions = <27 28 25 26 6 14 16 15 5 13 21 22>;
        };

        tap_dance: tap_dance {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE";
            #binding-cells = <0>;
            bindings = <&mo 2>, <&kp RIGHT_SHIFT>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer_1 {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp GRAVE       &kp Q          &kp W          &kp E          &kp R          &hold LG(LS(T)) T    &hold LG(Y) Y  &kp U       &kp I          &kp O    &kp P     &kp BSPC
&kp LEFT_SHIFT  &hold LG(A) A  &hold LG(S) S  &hold LG(D) D  &hold LG(F) F  &kp G                &kp H          &kp J       &kp K          &kp L    &kp SEMI  &kp ENTER
&kp LGUI        &hold LG(Z) Z  &hold LG(X) X  &hold LG(C) C  &hold LG(V) V  &kp B                &kp N          &kp M       &kp COMMA      &kp DOT  &kp FSLH  &kp RIGHT_SHIFT
                                              &kp LCTRL      &mo 1          &kp TAB              &kp SPACE      &tap_dance  &kp RIGHT_ALT
            >;
        };

        layer_2 {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESC       &none     &kp UP    &none      &none   &none        &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp MINUS                            &kp EQUAL                              &kp DELETE
&trans        &kp LEFT  &kp DOWN  &kp RIGHT  &none   &none        &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &hold LEFT_PARENTHESIS LEFT_BRACKET  &hold RIGHT_PARENTHESIS RIGHT_BRACKET  &kp SINGLE_QUOTE
&kp LEFT_GUI  &none     &none     &none      &none   &none        &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans                               &trans                                 &trans
                                  &kp LCTRL  &trans  &kp SPACE    &kp SPACE     &kp NUMBER_0  &kp RALT
            >;
        };

        layer_3 {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESCAPE  &kp EXCL         &kp AT             &kp HASH         &kp DLLR                           &kp PRCNT                            &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp BSPC
&trans      &tog 3           &ext_power EP_TOG  &rgb_ug RGB_EFR  &rgb_ug RGB_EFF                    &rgb_ug RGB_COLOR_HSB(245,100,50)    &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT   &rgb_ug RGB_TOG  &rgb_ug RGB_BRI    &rgb_ug RGB_BRD  &rgb_ug RGB_COLOR_HSB(118,100,50)  &rgb_ug RGB_COLOR_HSB(37,100,50)     &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC  &kp PIPE  &kp TILDE
                                                &kp LGUI         &trans                             &kp SPACE                            &kp RET    &trans     &kp RALT
            >;
        };

        LOL {
            bindings = <
&kp ESC  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5    &trans  &trans  &trans  &trans  &trans  &trans
&kp TAB  &kp Q         &kp W         &kp E         &kp R         &kp T     &trans  &trans  &trans  &trans  &trans  &trans
&kp B    &kp A         &kp S         &kp D         &kp F         &kp G     &trans  &trans  &trans  &trans  &trans  &trans
                                     &trans        &tog 3        &kp Y     &trans  &trans  &trans
            >;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
